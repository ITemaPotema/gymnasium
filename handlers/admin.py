from aiogram import Router
from aiogram.types import CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from .api.admin_api import AdminApi
from .bot_config import bot
from .settings import CheckAuthFilter, is_user_banned
from .interface import user_card_action_kb

admin_router = Router()


@admin_router.callback_query(lambda cal: cal.data.startswith("admin:delete_post"), CheckAuthFilter())
async def delete_bad_post(callback: CallbackQuery, token: str):
    admin_id = callback.from_user.id
    post_id, creator_id = callback.data.split(":")[2:4]
    admin_api = AdminApi(admin_id, token)

    delete_result = await admin_api.delete_post(post_id)

    if delete_result:
        await callback.message.delete()
        await callback.message.answer("–ü–æ—Å—Ç —É–¥–∞–ª—ë–Ω‚úÖ")
        warning_text = ("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ‚ùó‚ùó‚ùó \n\n"
                        "–ö–æ–Ω—Ç–µ–Ω—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ –í–∞—à–∏—Ö –ø–æ—Å—Ç–æ–≤ –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–ø—Ä–∏–µ–º–ª–∏–º—ã–º –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ –±—ã–ª —É–¥–∞–ª—ë–Ω –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π.\n\n"
                        "–£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö –∏ –Ω–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ –≤—Å—è–∫—É—é –µ—Ä—É–Ω–¥—É‚ùó")

        await bot.send_message(creator_id, text=warning_text)


@admin_router.callback_query(lambda cal: cal.data.startswith("promotion"), CheckAuthFilter())
async def promote_user_up_down(callback: CallbackQuery, token: str, is_admin: bool):
    to_promote_id, action = callback.data.split(":")[1:]
    admin_id = callback.from_user.id
    admin_api = AdminApi(tg_id=admin_id, token=token)

    if action == "upgrade":
        result = await admin_api.promote_user(int(to_promote_id))
        text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∏—Å–ª–æ –∞–¥–º–∏–Ω–æ–≤‚úÖ"
        new_kb = user_card_action_kb(int(to_promote_id), is_admin, True)

    else:
        result = await admin_api.downgrade_user(int(to_promote_id))
        text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ —á–∏—Å–ª–∞ –∞–¥–º–∏–Ω–æ–≤‚ùå"
        new_kb = user_card_action_kb(int(to_promote_id), is_admin, False)

    if result:
        await callback.message.answer(text=text)
        await callback.message.edit_reply_markup(reply_markup=new_kb)



class BanStates(StatesGroup):
    duration = State()
    message = State()


@admin_router.callback_query(lambda cal: cal.data.startswith("admin:ban_user"), CheckAuthFilter())
async def start_baning_process(callback: CallbackQuery, state: FSMContext):
    delete_id = int(callback.data.split(":")[2])

    if await is_user_banned(delete_id):
        await callback.message.answer(text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
        return

    await state.update_data(delete_id=delete_id)

    await callback.message.answer("–í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")
    await state.set_state(BanStates.message)


@admin_router.message(StateFilter(BanStates.message))
async def get_ban_message(message: Message, state: FSMContext):
    if not message.text:
        await message.answer(text="–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç!")
        return

    ban_message = message.text
    await state.update_data(message=ban_message)

    btn = [[KeyboardButton(text="–ù–∞–≤—Å–µ–≥–¥–∞üòà")]]
    keyboard = ReplyKeyboardMarkup(keyboard=btn, resize_keyboard=True)

    await message.answer(text="–í–≤–µ–¥–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–∞–Ω–∞(–≤ —á–∞—Å–∞—Ö):", reply_markup=keyboard)
    await state.set_state(BanStates.duration)


@admin_router.message(StateFilter(BanStates.duration), CheckAuthFilter())
async def ban_user(message: Message, state: FSMContext, token: str):
    if not message.text.isdigit() and message.text != "–ù–∞–≤—Å–µ–≥–¥–∞üòà":
        await message.answer("–û—à–∏–±–∫–∞! –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!")
        return

    delete_id = await state.get_value("delete_id")
    ban_message = await state.get_value("message")

    duration = int(message.text) if message.text.isdigit() else -1 # -1 -> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞

    admin_id = message.from_user.id
    admin_api = AdminApi(tg_id=admin_id, token=token)

    result = await admin_api.ban_user(delete_id, duration)

    if result:
        ban_duration = f"{duration} —á–∞—Å(–∞/–æ–≤)" if duration != -1 else "–Ω–∞–≤—Å–µ–≥–¥–∞"
        text = (f"–í–Ω–∏–º–∞–Ω–∏–µ‚ùó –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π –∏ —Ç–µ–ø–µ—Ä—å {ban_duration} –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º\n\n"
                f"C–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n"
                f"{ban_message}")

        await bot.send_message(delete_id, text=text)
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ωüö´", reply_markup=ReplyKeyboardRemove())

    await state.clear()