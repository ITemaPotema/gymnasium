from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from decouple import config
from .settings import all_forms


def get_grade_kb():
    keyboard = InlineKeyboardBuilder()

    for grade in range(6, 12):
        keyboard.add(
            InlineKeyboardButton(text=str(grade), callback_data=f"grade:{grade}"),
        )

    keyboard.adjust(3)
    return keyboard.as_markup()


def get_letter_kb(grade):
    keyboard = InlineKeyboardBuilder()


    forms_letters = {
        "6": ("–ê", "–ë", "–í", "–ì"),
        "7": ("–ê", "–ë", "–í", "–ì", "–î"),
        "8": ("–ê", "–ë", "–í", "–î"),
        "9": ("–ê", "–ë", "–í", "–ì"),
        "10": ("–ê", "–ë", "–í", "–ì"),
        "11": ("–ê", "–ë")
    }

    letters = forms_letters[grade]

    for letter in letters:
        keyboard.add(
            InlineKeyboardButton(text=letter, callback_data=f"grade_letter:{grade}{letter}"),
        )

    keyboard.adjust(3)
    return keyboard.as_markup()


def get_pagination_keyboard(data: dict, key_offset: int) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()
    forms = all_forms
    form = forms[key_offset]


    keyboard.add(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"form:{key_offset - 1}"),
        InlineKeyboardButton(text=form, callback_data="current_page"),
        InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"form:{(key_offset + 1) % len(forms)}")
    )

    if not data:
        keyboard.add(InlineKeyboardButton(text="–ø—É—Å—Ç–æ", callback_data="empty"))

    else:
        for tg_id in data:
            pupil = data[tg_id]
            keyboard.add(InlineKeyboardButton(text=f"{pupil['first_name']} {pupil['last_name']}", callback_data=f"pupil:{form}:{tg_id}"))

    keyboard.adjust(3, 2)
    return keyboard.as_markup()


def get_sex_keyboard():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
    InlineKeyboardButton(text="–ú—É–∂—Å–∫–æ–π", callback_data="2"),
        InlineKeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π", callback_data="1"),
        InlineKeyboardButton(text="–ù–µ –≤–∞–∂–Ω–æ", callback_data="0")
    )

    keyboard.adjust(2)
    return keyboard.as_markup()


def get_form_keyboard():
    keyboard = InlineKeyboardBuilder()
    btns = []

    for i in range(6, 12):
        btns.append(InlineKeyboardButton(text=str(i), callback_data=str(i)))

    keyboard.add(*btns)

    keyboard.adjust(3)
    return keyboard.as_markup()


def get_feed_keyboard(tg_id: int, karma: int):
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–û–±–º–µ–Ω—è—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏", callback_data=f"exchange:{tg_id}:feed"),
        InlineKeyboardButton(text=f"{str(karma)} ‚ù§", callback_data=f"karma:{tg_id}:{karma}"),
        InlineKeyboardButton(text="–î–∞–ª–µ–µ", callback_data="–î–∞–ª–µ–µ")
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_request_keyboard(sender_id, sender_username):
    buttons = [
        [
            InlineKeyboardButton(text="–û–±–º–µ–Ω—è—Ç—å—Å—è", callback_data=f"agree:{sender_id}:{sender_username}"),
            InlineKeyboardButton(text="–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data="next_request")
        ]
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_post_keyboard(likes, dislikes, post_id, creator_id, post_type, is_admin):
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text=f"{likes} ‚ù§", callback_data=f"like:{post_id}:{likes}:{dislikes}:{creator_id}:{post_type}"),
        InlineKeyboardButton(text=f"{dislikes} üëé", callback_data=f"dislike:{post_id}:{likes}:{dislikes}:{creator_id}:{post_type}"),
    )

    if is_admin:
        keyboard.add(InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Çüõë", callback_data=f"admin:delete_post:{post_id}:{creator_id}"))

    keyboard.adjust(2)
    return keyboard.as_markup()


def get_funds_keyboard():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–ë–∞–ª–∞–Ω—Åüíé", callback_data="balance"),
        InlineKeyboardButton(text=f"–ö–æ—à–µ–ª—ë–∫ –∞–≤—Ç–æ—Ä–∞üëõ", callback_data=f"author_wallet"),
        InlineKeyboardButton(text="–í —á—ë–º –æ—Ç–ª–∏—á–∏–µ?", callback_data="explain")
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_choose_post_type_kb():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="—Ç–µ–∫—Å—Ç", callback_data="text"),
        InlineKeyboardButton(text="—Ç–µ–∫—Å—Ç+—Ñ–æ—Ç–æ", callback_data="text_photo"),
        InlineKeyboardButton(text="–≥–æ–ª–æ—Å–æ–≤–æ–µ", callback_data="voice"),
        InlineKeyboardButton(text="–∫—Ä—É–∂–æ—á–µ–∫", callback_data="circle"),
        InlineKeyboardButton(text="–≤–∏–¥–µ–æ", callback_data="video")
    )

    keyboard.adjust(2, 2, 1)
    return keyboard.as_markup()


def get_post_stat_kb(post_id, offset, limit, stat):
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–î–∞–ª–µ–µ", callback_data=f"stat:{offset % limit}:{limit}"),
        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç‚ùå", callback_data=f"user_delete_post:{post_id}")
    )

    if stat:
        keyboard.add(InlineKeyboardButton(text="–ö—Ç–æ –ª–∞–π–∫–Ω—É–ª?", callback_data=f"list_likers:{post_id}"))

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_stars_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text=f"–û–ø–ª–∞—Ç–∏—Ç—å 100 ‚≠êÔ∏è", pay=True)

    return builder.as_markup()


def edit_profile_kb():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–§–æ—Ç–æüì∑", callback_data="edit:photo"),
        InlineKeyboardButton(text="–ò–Ω—Ñ–æ‚úè", callback_data="edit:info")
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_options_keyboard():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–î–æ–ø –ø–æ—Å—Ç‚ûï1Ô∏è‚É£", callback_data="option:extra_post"),
        InlineKeyboardButton(text="–ü–æ—Å—Ç-–ª–∞–π–∫–∏", callback_data="option:stat")
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_support_keyboard():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="Stars‚≠êÔ∏è", callback_data="support:stars"),
        InlineKeyboardButton(text="–ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã", callback_data="support:credit_card")
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_profile_commands():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—åüòé", callback_data="commands:profile"),
        InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å‚úè", callback_data="commands:edit_profile"),
        InlineKeyboardButton(text="–ó–∞—è–≤–∫–∏üíå", callback_data="commands:friend_requests"),
        InlineKeyboardButton(text="–ö–æ—à–µ–ª—ë–∫üëõ", callback_data="commands:wallet"),
    )

    keyboard.adjust(2, 1, 1)
    return keyboard.as_markup()


def get_search_commands():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–ü–æ–∏—Å–∫üîç", callback_data="commands:search"),
        InlineKeyboardButton(text="–õ–µ–Ω—Ç–∞üéû", callback_data="commands:users_feed"),
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_post_commands():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—åüî•", callback_data="commands:create_post"),
        InlineKeyboardButton(text="–õ–µ–Ω—Ç–∞üéû", callback_data="commands:posts"),
        InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìí", callback_data="commands:stat"),
        InlineKeyboardButton(text="–û–ø—Ü–∏–∏üìà", callback_data="commands:options"),
        InlineKeyboardButton(text="–ú–∞–π–Ω–∏–Ω–≥üíé", callback_data="commands:maining")
    )

    keyboard.adjust(2, 2, 1)
    return keyboard.as_markup()


def get_chat_kb(online):
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text=f"–û–Ω–ª–∞–π–Ωüü© {online}", callback_data="online"),
        InlineKeyboardButton(text="–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞üîç", callback_data="chat:search"),
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def get_cancel_kb():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="chat:cancel"),
    )

    keyboard.adjust()
    return keyboard.as_markup()


def only_negative_kb():
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(text="–¢–æ–ª—å–∫–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ", callback_data="negative:yes"),
        InlineKeyboardButton(text="–õ—é–±—ã–µ", callback_data="negative:no")
    )

    keyboard.adjust(1)
    return keyboard.as_markup()


def user_card_action_kb(tg_id: int, is_admin: bool, user_is_admin: bool):
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
    InlineKeyboardButton(text="–û–±–º–µ–Ω—è—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏", callback_data=f"exchange:{tg_id}:search"),
            InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å", callback_data="hide_profile"))

    if is_admin:
        if user_is_admin:
            promotion_text = "–ò—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –∞–¥–º–∏–Ω–æ–≤‚ùå"
            action = "downgrade"

        else:
            promotion_text = "–°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º‚úÖ"
            action = "upgrade"

        keyboard.add(
            InlineKeyboardButton(text=promotion_text, callback_data=f"promotion:{tg_id}:{action}"),
            InlineKeyboardButton(text="–ó–∞–±–∞–Ω–∏—Ç—åüö´", callback_data=f"admin:ban_user:{tg_id}")
        )

    keyboard.adjust(1)
    return keyboard.as_markup()